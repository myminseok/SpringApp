<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <parent>
  <groupId>com.nexr</groupId>
  <artifactId>nexr-platform-parent</artifactId>
  <version>0.8</version>
 </parent>

 <groupId>com.nexr</groupId>
 <artifactId>SpringApp</artifactId>
 <packaging>jar</packaging>
 <version>1.0-SNAPSHOT</version>
 <name>SpringApp</name>
 <url>http://maven.apache.org</url>




 <properties>
  <java-version>1.6</java-version>
  <org.apache.tomcat.maven-version>2.0</org.apache.tomcat.maven-version>
  <org.aspectj-version>1.6.11</org.aspectj-version>
  <org.codehaus.jackson-version>1.9.9</org.codehaus.jackson-version>
  <org.slf4j-version>1.5.10</org.slf4j-version>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
 </properties>

 <dependencies>
  <!-- Spring -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-context</artifactId>
   <version>${spring-version}</version>
   <exclusions>
    <!-- Exclude Commons Logging in favor of SLF4j -->
    <exclusion>
     <groupId>commons-logging</groupId>
     <artifactId>commons-logging</artifactId>
    </exclusion>
   </exclusions>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-aop</artifactId>
   <version>${spring-version}</version>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-aspects</artifactId>
   <version>${spring-version}</version>
   <scope>compile</scope>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-tx</artifactId>
   <version>${spring-version}</version>
   <scope>compile</scope>
  </dependency>

  <!-- daemon -->

  <!-- AspectJ -->
  <dependency>
   <groupId>org.aspectj</groupId>
   <artifactId>aspectjrt</artifactId>
   <version>${org.aspectj-version}</version>
  </dependency>
  <dependency>
   <groupId>cglib</groupId>
   <artifactId>cglib</artifactId>
   <version>2.2.2</version>
  </dependency>

  <!-- Jackson JSON Mapper -->
  <dependency>
   <groupId>org.codehaus.jackson</groupId>
   <artifactId>jackson-mapper-asl</artifactId>
   <version>${org.codehaus.jackson-version}</version>
  </dependency>
  <dependency>
   <groupId>org.codehaus.jackson</groupId>
   <artifactId>jackson-xc</artifactId>
   <version>${org.codehaus.jackson-version}</version>
   <exclusions>
    <exclusion>
     <artifactId>jackson-core-asl</artifactId>
     <groupId>org.codehaus.jackson</groupId>
    </exclusion>
   </exclusions>
  </dependency>


  <!-- Logging -->
  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>slf4j-api</artifactId>
  </dependency>
  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>jcl-over-slf4j</artifactId>
   <version>${org.slf4j-version}</version>
   <scope>runtime</scope>
  </dependency>
  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>slf4j-log4j12</artifactId>
   <scope>runtime</scope>
  </dependency>
  <dependency>
   <groupId>log4j</groupId>
   <artifactId>log4j</artifactId>
   <exclusions>
    <exclusion>
     <groupId>javax.mail</groupId>
     <artifactId>mail</artifactId>
    </exclusion>
    <exclusion>
     <groupId>javax.jms</groupId>
     <artifactId>jms</artifactId>
    </exclusion>
    <exclusion>
     <groupId>com.sun.jdmk</groupId>
     <artifactId>jmxtools</artifactId>
    </exclusion>
    <exclusion>
     <groupId>com.sun.jmx</groupId>
     <artifactId>jmxri</artifactId>
    </exclusion>
   </exclusions>
  </dependency>

  <!-- @Inject -->
  <dependency>
   <groupId>javax.inject</groupId>
   <artifactId>javax.inject</artifactId>
   <version>1</version>
  </dependency>


  <!-- Messaging task -->
  <dependency>
   <groupId>org.apache.httpcomponents</groupId>
   <artifactId>httpclient</artifactId>
   <version>4.2.1</version>
  </dependency>


  <!-- Test -->
  <dependency>
   <groupId>org.hamcrest</groupId>
   <artifactId>hamcrest-integration</artifactId>
   <version>1.2.1</version>
   <scope>test</scope>
  </dependency>
  <dependency>
   <groupId>junit</groupId>
   <artifactId>junit-dep</artifactId>
   <version>4.10</version><!--$NO-MVN-MAN-VER$ -->
   <scope>test</scope>
   <exclusions>
    <exclusion>
     <groupId>org.hamcrest</groupId>
     <artifactId>hamcrest-core</artifactId>
    </exclusion>
   </exclusions>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-test</artifactId>
   <version>${spring-version}</version>
   <scope>test</scope>
  </dependency>


  <!-- for VirtualMachine -->
  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-module-javaagent</artifactId>
   <version>1.4.12</version>
   <scope>test</scope>
  </dependency>

  <!-- for test mock -->
  <dependency>
   <groupId>org.easymock</groupId>
   <artifactId>easymock</artifactId>
   <version>3.0</version>
   <scope>test</scope>
  </dependency>

  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-api-easymock</artifactId>
   <version>1.4.12</version>
   <scope>test</scope>
  </dependency>

  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-module-junit4</artifactId>
   <version>1.4.12</version>
   <scope>test</scope>
  </dependency>

  <!-- to prevent com.thoughtworks.xstream.converters.ConversionException -->
  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-module-junit4-rule-agent</artifactId>
   <version>1.4.12</version>
   <scope>test</scope>
  </dependency>

  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-module-junit4-rule</artifactId>
   <version>1.4.12</version>
   <scope>test</scope>
  </dependency>

  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-module-junit4-common</artifactId>
   <version>1.4.12</version>
   <scope>test</scope>
  </dependency>
  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-classloading-xstream</artifactId>
   <version>1.4.12</version>
   <scope>test</scope>
  </dependency>


  <!-- for system metrics -->
  <dependency>
   <groupId>org.fusesource</groupId>
   <artifactId>sigar</artifactId>
   <version>1.6.4</version>
  </dependency>

 </dependencies>

 <build>
  <plugins>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <configuration>
     <source>${java-version}</source>
     <target>${java-version}</target>
    </configuration>
   </plugin>

   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-dependency-plugin</artifactId>
    <executions>
     <execution>
      <id>install</id>
      <phase>install</phase>
      <goals>
       <goal>sources</goal>
      </goals>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-resources-plugin</artifactId>
    <version>2.5</version>
    <configuration>
     <encoding>UTF-8</encoding>
    </configuration>
   </plugin>
   <plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>aspectj-maven-plugin</artifactId>
    <version>1.4</version>
    <configuration>
     <complianceLevel>${java-version}</complianceLevel>
     <aspectLibraries>
      <aspectLibrary>
       <groupId>org.springframework</groupId>
       <artifactId>spring-aspects</artifactId>
      </aspectLibrary>
     </aspectLibraries>
    </configuration>
    <executions>
     <execution>
      <goals>
       <goal>compile</goal>
       <goal>test-compile</goal>
      </goals>
     </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.apache.tomcat.maven</groupId>
    <artifactId>tomcat7-maven-plugin</artifactId>
    <version>${org.apache.tomcat.maven-version}</version>
    <configuration>
     <path>/ndap-meerkat</path>
     <systemProperties>
      <JAVA_OPTS> -Xms128m -Xms128m -XX:PermSize=128m -XX:MaxPermSize=128m </JAVA_OPTS>
     </systemProperties>
    </configuration>
   </plugin>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-eclipse-plugin</artifactId>
    <version>2.9</version>
    <configuration>
     <downloadSources>true</downloadSources>
     <downloadJavadocs>true</downloadJavadocs>
     <wtpversion>2.0</wtpversion>
    </configuration>
   </plugin>



   <!-- static code analysis, called during the verify phase -->
   <!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-pmd-plugin</artifactId> <version>2.7.1</version> 
    <configuration> <targetJdk>${java-version}</targetJdk> <rulesets> <ruleset>${basedir}/pmd-ruleset.xml</ruleset> </rulesets> 
    </configuration> <executions> <execution> <goals> <goal>check</goal> <goal>cpd-check</goal> </goals> </execution> </executions> 
    </plugin> -->

   <!-- make all dependency jars into one jar mvn clean package shade:shade -->
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>2.3.2</version>
    <configuration>
     <archive>
      <manifest>
       <addClasspath>true</addClasspath>
       <mainClass>com.nexr.AgentDaemon</mainClass>
      </manifest>
     </archive>
    </configuration>
   </plugin>


   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>2.4</version>
    <configuration>
     <argLine>
      -javaagent:${settings.localRepository}/org/powermock/powermock-module-javaagent/1.4.12/powermock-module-javaagent-1.4.12.jar
     </argLine>
     <useSystemClassloader>true</useSystemClassloader>
    </configuration>
   </plugin>

  </plugins>
 </build>
</project>
